ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccr6hg59.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"lv_vdb.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.lv_vdb_get,"ax",%progbits
  20              		.align	2
  21              		.global	lv_vdb_get
  22              		.thumb
  23              		.thumb_func
  24              		.type	lv_vdb_get, %function
  25              	lv_vdb_get:
  26              	.LFB12:
  27              		.file 1 "..\\lvgl\\lv_core\\lv_vdb.c"
   1:..\lvgl\lv_core/lv_vdb.c **** /**
   2:..\lvgl\lv_core/lv_vdb.c ****  * @file lv_vdb.c
   3:..\lvgl\lv_core/lv_vdb.c ****  *
   4:..\lvgl\lv_core/lv_vdb.c ****  */
   5:..\lvgl\lv_core/lv_vdb.c **** 
   6:..\lvgl\lv_core/lv_vdb.c **** /*********************
   7:..\lvgl\lv_core/lv_vdb.c ****  *      INCLUDES
   8:..\lvgl\lv_core/lv_vdb.c ****  *********************/
   9:..\lvgl\lv_core/lv_vdb.c **** #include "lv_vdb.h"
  10:..\lvgl\lv_core/lv_vdb.c **** #if LV_VDB_SIZE != 0
  11:..\lvgl\lv_core/lv_vdb.c **** 
  12:..\lvgl\lv_core/lv_vdb.c **** #include "../lv_hal/lv_hal_disp.h"
  13:..\lvgl\lv_core/lv_vdb.c **** #include "../lv_misc/lv_log.h"
  14:..\lvgl\lv_core/lv_vdb.c **** #include <stddef.h>
  15:..\lvgl\lv_core/lv_vdb.c **** 
  16:..\lvgl\lv_core/lv_vdb.c **** /*********************
  17:..\lvgl\lv_core/lv_vdb.c ****  *      DEFINES
  18:..\lvgl\lv_core/lv_vdb.c ****  *********************/
  19:..\lvgl\lv_core/lv_vdb.c **** #ifndef LV_ATTRIBUTE_FLUSH_READY
  20:..\lvgl\lv_core/lv_vdb.c **** #define LV_ATTRIBUTE_FLUSH_READY
  21:..\lvgl\lv_core/lv_vdb.c **** #endif
  22:..\lvgl\lv_core/lv_vdb.c **** 
  23:..\lvgl\lv_core/lv_vdb.c **** /**********************
  24:..\lvgl\lv_core/lv_vdb.c ****  *      TYPEDEFS
  25:..\lvgl\lv_core/lv_vdb.c ****  **********************/
  26:..\lvgl\lv_core/lv_vdb.c **** 
  27:..\lvgl\lv_core/lv_vdb.c **** /**********************
  28:..\lvgl\lv_core/lv_vdb.c ****  *  STATIC PROTOTYPES
  29:..\lvgl\lv_core/lv_vdb.c ****  **********************/
  30:..\lvgl\lv_core/lv_vdb.c **** 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccr6hg59.s 			page 2


  31:..\lvgl\lv_core/lv_vdb.c **** /**********************
  32:..\lvgl\lv_core/lv_vdb.c ****  *  STATIC VARIABLES
  33:..\lvgl\lv_core/lv_vdb.c ****  **********************/
  34:..\lvgl\lv_core/lv_vdb.c **** 
  35:..\lvgl\lv_core/lv_vdb.c **** /*Simple VDB*/
  36:..\lvgl\lv_core/lv_vdb.c **** #if LV_VDB_DOUBLE == 0
  37:..\lvgl\lv_core/lv_vdb.c **** #  if LV_VDB_ADR == 0
  38:..\lvgl\lv_core/lv_vdb.c **** /*If the buffer address is not specified  simply allocate it*/
  39:..\lvgl\lv_core/lv_vdb.c **** static uint8_t vdb_buf[LV_VDB_SIZE_IN_BYTES];
  40:..\lvgl\lv_core/lv_vdb.c **** static lv_vdb_t vdb = {.buf = (lv_color_t *)vdb_buf};
  41:..\lvgl\lv_core/lv_vdb.c **** #  else     /*LV_VDB_ADR != 0*/
  42:..\lvgl\lv_core/lv_vdb.c **** /*If the buffer address is specified use that address*/
  43:..\lvgl\lv_core/lv_vdb.c **** static lv_vdb_t vdb = {.buf = (lv_color_t *)LV_VDB_ADR};
  44:..\lvgl\lv_core/lv_vdb.c **** #  endif
  45:..\lvgl\lv_core/lv_vdb.c **** 
  46:..\lvgl\lv_core/lv_vdb.c **** /*LV_VDB_DOUBLE != 0*/
  47:..\lvgl\lv_core/lv_vdb.c **** #else
  48:..\lvgl\lv_core/lv_vdb.c **** /*Double VDB*/
  49:..\lvgl\lv_core/lv_vdb.c **** static uint8_t vdb_active = 0;
  50:..\lvgl\lv_core/lv_vdb.c **** #  if LV_VDB_ADR == 0
  51:..\lvgl\lv_core/lv_vdb.c **** /*If the buffer address is not specified  simply allocate it*/
  52:..\lvgl\lv_core/lv_vdb.c **** static uint8_t vdb_buf1[LV_VDB_SIZE_IN_BYTES];
  53:..\lvgl\lv_core/lv_vdb.c **** static uint8_t vdb_buf2[LV_VDB_SIZE_IN_BYTES];
  54:..\lvgl\lv_core/lv_vdb.c **** static lv_vdb_t vdb[2] = {{.buf = (lv_color_t *) vdb_buf1}, {.buf = (lv_color_t *) vdb_buf2}};
  55:..\lvgl\lv_core/lv_vdb.c **** #  else /*LV_VDB_ADR != 0*/
  56:..\lvgl\lv_core/lv_vdb.c **** /*If the buffer address is specified use that address*/
  57:..\lvgl\lv_core/lv_vdb.c **** static lv_vdb_t vdb[2] = {{.buf = (lv_color_t *)LV_VDB_ADR}, {.buf = (lv_color_t *)LV_VDB2_ADR}};
  58:..\lvgl\lv_core/lv_vdb.c **** #  endif
  59:..\lvgl\lv_core/lv_vdb.c **** #endif
  60:..\lvgl\lv_core/lv_vdb.c **** 
  61:..\lvgl\lv_core/lv_vdb.c **** static volatile bool vdb_flushing = false;
  62:..\lvgl\lv_core/lv_vdb.c **** 
  63:..\lvgl\lv_core/lv_vdb.c **** /**********************
  64:..\lvgl\lv_core/lv_vdb.c ****  *      MACROS
  65:..\lvgl\lv_core/lv_vdb.c ****  **********************/
  66:..\lvgl\lv_core/lv_vdb.c **** 
  67:..\lvgl\lv_core/lv_vdb.c **** /**********************
  68:..\lvgl\lv_core/lv_vdb.c ****  *   GLOBAL FUNCTIONS
  69:..\lvgl\lv_core/lv_vdb.c ****  **********************/
  70:..\lvgl\lv_core/lv_vdb.c **** 
  71:..\lvgl\lv_core/lv_vdb.c **** /**
  72:..\lvgl\lv_core/lv_vdb.c ****  * Get the 'vdb' variable or allocate one in LV_VDB_DOUBLE mode
  73:..\lvgl\lv_core/lv_vdb.c ****  * @return pointer to a 'vdb' variable
  74:..\lvgl\lv_core/lv_vdb.c ****  */
  75:..\lvgl\lv_core/lv_vdb.c **** lv_vdb_t * lv_vdb_get(void)
  76:..\lvgl\lv_core/lv_vdb.c **** {
  28              		.loc 1 76 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.L2:
  77:..\lvgl\lv_core/lv_vdb.c **** #if LV_VDB_DOUBLE == 0
  78:..\lvgl\lv_core/lv_vdb.c ****     /* Wait until VDB is flushing.
  79:..\lvgl\lv_core/lv_vdb.c ****      * (Until this user calls of 'lv_flush_ready()' in the display drivers's flush function*/
  80:..\lvgl\lv_core/lv_vdb.c ****     while(vdb_flushing);
  34              		.loc 1 80 0 discriminator 1
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccr6hg59.s 			page 3


  35 0000 034B     		ldr	r3, .L3
  36 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  37 0004 13F0FF0F 		tst	r3, #255
  38 0008 FAD1     		bne	.L2
  81:..\lvgl\lv_core/lv_vdb.c **** 
  82:..\lvgl\lv_core/lv_vdb.c ****     return &vdb;
  83:..\lvgl\lv_core/lv_vdb.c **** #else
  84:..\lvgl\lv_core/lv_vdb.c ****     /*If already there is an active do nothing*/
  85:..\lvgl\lv_core/lv_vdb.c ****     return &vdb[vdb_active];
  86:..\lvgl\lv_core/lv_vdb.c **** #endif
  87:..\lvgl\lv_core/lv_vdb.c **** }
  39              		.loc 1 87 0
  40 000a 0248     		ldr	r0, .L3+4
  41 000c 7047     		bx	lr
  42              	.L4:
  43 000e 00BF     		.align	2
  44              	.L3:
  45 0010 00000000 		.word	.LANCHOR0
  46 0014 00000000 		.word	.LANCHOR1
  47              		.cfi_endproc
  48              	.LFE12:
  49              		.size	lv_vdb_get, .-lv_vdb_get
  50              		.section	.text.lv_vdb_flush,"ax",%progbits
  51              		.align	2
  52              		.global	lv_vdb_flush
  53              		.thumb
  54              		.thumb_func
  55              		.type	lv_vdb_flush, %function
  56              	lv_vdb_flush:
  57              	.LFB13:
  88:..\lvgl\lv_core/lv_vdb.c **** 
  89:..\lvgl\lv_core/lv_vdb.c **** /**
  90:..\lvgl\lv_core/lv_vdb.c ****  * Flush the content of the VDB
  91:..\lvgl\lv_core/lv_vdb.c ****  */
  92:..\lvgl\lv_core/lv_vdb.c **** void lv_vdb_flush(void)
  93:..\lvgl\lv_core/lv_vdb.c **** {
  58              		.loc 1 93 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62 0000 10B5     		push	{r4, lr}
  63              		.cfi_def_cfa_offset 8
  64              		.cfi_offset 4, -8
  65              		.cfi_offset 14, -4
  66 0002 82B0     		sub	sp, sp, #8
  67              		.cfi_def_cfa_offset 16
  94:..\lvgl\lv_core/lv_vdb.c ****     lv_vdb_t * vdb_act = lv_vdb_get();
  68              		.loc 1 94 0
  69 0004 FFF7FEFF 		bl	lv_vdb_get
  70              	.LVL0:
  95:..\lvgl\lv_core/lv_vdb.c ****     if(!vdb_act) {
  71              		.loc 1 95 0
  72 0008 30B9     		cbnz	r0, .L6
  96:..\lvgl\lv_core/lv_vdb.c ****         LV_LOG_WARN("Invalid VDB pointer");
  73              		.loc 1 96 0
  74 000a 0C4B     		ldr	r3, .L9
  75 000c 6022     		movs	r2, #96
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccr6hg59.s 			page 4


  76 000e 0C49     		ldr	r1, .L9+4
  77 0010 0220     		movs	r0, #2
  78              	.LVL1:
  79 0012 FFF7FEFF 		bl	lv_log_add
  80              	.LVL2:
  97:..\lvgl\lv_core/lv_vdb.c ****         return;
  81              		.loc 1 97 0
  82 0016 0FE0     		b	.L5
  83              	.LVL3:
  84              	.L6:
  85 0018 0446     		mov	r4, r0
  98:..\lvgl\lv_core/lv_vdb.c ****     }
  99:..\lvgl\lv_core/lv_vdb.c **** 
 100:..\lvgl\lv_core/lv_vdb.c ****     /*Don't start a new flush while the previous is not finished*/
 101:..\lvgl\lv_core/lv_vdb.c **** #if LV_VDB_DOUBLE
 102:..\lvgl\lv_core/lv_vdb.c ****     while(vdb_flushing);
 103:..\lvgl\lv_core/lv_vdb.c **** #endif  /*LV_VDB_DOUBLE*/
 104:..\lvgl\lv_core/lv_vdb.c **** 
 105:..\lvgl\lv_core/lv_vdb.c ****     vdb_flushing = true;
  86              		.loc 1 105 0
  87 001a 0122     		movs	r2, #1
  88 001c 094B     		ldr	r3, .L9+8
  89 001e 1A70     		strb	r2, [r3]
 106:..\lvgl\lv_core/lv_vdb.c **** 
 107:..\lvgl\lv_core/lv_vdb.c ****     /*Flush the rendered content to the display*/
 108:..\lvgl\lv_core/lv_vdb.c ****     lv_disp_flush(vdb_act->area.x1, vdb_act->area.y1, vdb_act->area.x2, vdb_act->area.y2, vdb_act->
  90              		.loc 1 108 0
  91 0020 B0F90000 		ldrsh	r0, [r0]
  92              	.LVL4:
  93 0024 B4F90210 		ldrsh	r1, [r4, #2]
  94 0028 B4F90420 		ldrsh	r2, [r4, #4]
  95 002c B4F90630 		ldrsh	r3, [r4, #6]
  96 0030 A468     		ldr	r4, [r4, #8]
  97              	.LVL5:
  98 0032 0094     		str	r4, [sp]
  99 0034 FFF7FEFF 		bl	lv_disp_flush
 100              	.LVL6:
 101              	.L5:
 109:..\lvgl\lv_core/lv_vdb.c **** 
 110:..\lvgl\lv_core/lv_vdb.c **** 
 111:..\lvgl\lv_core/lv_vdb.c **** #if LV_VDB_DOUBLE
 112:..\lvgl\lv_core/lv_vdb.c ****     /*Make the other VDB active. The content of the current will be kept until the next flush*/
 113:..\lvgl\lv_core/lv_vdb.c ****     vdb_active++;
 114:..\lvgl\lv_core/lv_vdb.c ****     vdb_active &= 0x1;
 115:..\lvgl\lv_core/lv_vdb.c **** 
 116:..\lvgl\lv_core/lv_vdb.c ****     /*If the screen is transparent initialize it when the new VDB is selected*/
 117:..\lvgl\lv_core/lv_vdb.c **** #  if LV_COLOR_SCREEN_TRANSP
 118:..\lvgl\lv_core/lv_vdb.c ****         memset(vdb[vdb_active].buf, 0x00, LV_VDB_SIZE_IN_BYTES);
 119:..\lvgl\lv_core/lv_vdb.c **** #  endif  /*LV_COLOR_SCREEN_TRANSP*/
 120:..\lvgl\lv_core/lv_vdb.c **** 
 121:..\lvgl\lv_core/lv_vdb.c **** #endif  /*#if LV_VDB_DOUBLE*/
 122:..\lvgl\lv_core/lv_vdb.c **** 
 123:..\lvgl\lv_core/lv_vdb.c **** }
 102              		.loc 1 123 0
 103 0038 02B0     		add	sp, sp, #8
 104              		.cfi_def_cfa_offset 8
 105              		@ sp needed
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccr6hg59.s 			page 5


 106 003a 10BD     		pop	{r4, pc}
 107              	.L10:
 108              		.align	2
 109              	.L9:
 110 003c 00000000 		.word	.LC0
 111 0040 14000000 		.word	.LC1
 112 0044 00000000 		.word	.LANCHOR0
 113              		.cfi_endproc
 114              	.LFE13:
 115              		.size	lv_vdb_flush, .-lv_vdb_flush
 116              		.section	.text.lv_vdb_set_adr,"ax",%progbits
 117              		.align	2
 118              		.global	lv_vdb_set_adr
 119              		.thumb
 120              		.thumb_func
 121              		.type	lv_vdb_set_adr, %function
 122              	lv_vdb_set_adr:
 123              	.LFB14:
 124:..\lvgl\lv_core/lv_vdb.c **** 
 125:..\lvgl\lv_core/lv_vdb.c **** /**
 126:..\lvgl\lv_core/lv_vdb.c ****  * Set the address of VDB buffer(s) manually. To use this set `LV_VDB_ADR` (and `LV_VDB2_ADR`) to `
 127:..\lvgl\lv_core/lv_vdb.c ****  * It should be called before `lv_init()`. The size of the buffer should be: `LV_VDB_SIZE_IN_BYTES`
 128:..\lvgl\lv_core/lv_vdb.c ****  * @param buf1 address of the VDB.
 129:..\lvgl\lv_core/lv_vdb.c ****  * @param buf2 address of the second buffer. `NULL` if `LV_VDB_DOUBLE  0`
 130:..\lvgl\lv_core/lv_vdb.c ****  */
 131:..\lvgl\lv_core/lv_vdb.c **** void lv_vdb_set_adr(void * buf1, void * buf2)
 132:..\lvgl\lv_core/lv_vdb.c **** {
 124              		.loc 1 132 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 129              	.LVL7:
 133:..\lvgl\lv_core/lv_vdb.c **** #if LV_VDB_DOUBLE == 0
 134:..\lvgl\lv_core/lv_vdb.c ****     (void) buf2;   /*unused*/
 135:..\lvgl\lv_core/lv_vdb.c ****     vdb.buf = buf1;
 130              		.loc 1 135 0
 131 0000 014B     		ldr	r3, .L12
 132 0002 9860     		str	r0, [r3, #8]
 133 0004 7047     		bx	lr
 134              	.L13:
 135 0006 00BF     		.align	2
 136              	.L12:
 137 0008 00000000 		.word	.LANCHOR1
 138              		.cfi_endproc
 139              	.LFE14:
 140              		.size	lv_vdb_set_adr, .-lv_vdb_set_adr
 141              		.section	.text.lv_flush_ready,"ax",%progbits
 142              		.align	2
 143              		.global	lv_flush_ready
 144              		.thumb
 145              		.thumb_func
 146              		.type	lv_flush_ready, %function
 147              	lv_flush_ready:
 148              	.LFB15:
 136:..\lvgl\lv_core/lv_vdb.c **** #else
 137:..\lvgl\lv_core/lv_vdb.c ****     vdb[0].buf = buf1;
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccr6hg59.s 			page 6


 138:..\lvgl\lv_core/lv_vdb.c ****     vdb[1].buf = buf2;
 139:..\lvgl\lv_core/lv_vdb.c **** #endif
 140:..\lvgl\lv_core/lv_vdb.c **** }
 141:..\lvgl\lv_core/lv_vdb.c **** 
 142:..\lvgl\lv_core/lv_vdb.c **** /**
 143:..\lvgl\lv_core/lv_vdb.c ****  * Call in the display driver's  'disp_flush' function when the flushing is finished
 144:..\lvgl\lv_core/lv_vdb.c ****  */
 145:..\lvgl\lv_core/lv_vdb.c **** LV_ATTRIBUTE_FLUSH_READY void lv_flush_ready(void)
 146:..\lvgl\lv_core/lv_vdb.c **** {
 149              		.loc 1 146 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 147:..\lvgl\lv_core/lv_vdb.c ****     vdb_flushing = false;
 154              		.loc 1 147 0
 155 0000 0022     		movs	r2, #0
 156 0002 014B     		ldr	r3, .L15
 157 0004 1A70     		strb	r2, [r3]
 158 0006 7047     		bx	lr
 159              	.L16:
 160              		.align	2
 161              	.L15:
 162 0008 00000000 		.word	.LANCHOR0
 163              		.cfi_endproc
 164              	.LFE15:
 165              		.size	lv_flush_ready, .-lv_flush_ready
 166              		.section	.text.lv_vdb_get_active,"ax",%progbits
 167              		.align	2
 168              		.global	lv_vdb_get_active
 169              		.thumb
 170              		.thumb_func
 171              		.type	lv_vdb_get_active, %function
 172              	lv_vdb_get_active:
 173              	.LFB16:
 148:..\lvgl\lv_core/lv_vdb.c **** 
 149:..\lvgl\lv_core/lv_vdb.c ****     /*If the screen is transparent initialize it when the flushing is ready*/
 150:..\lvgl\lv_core/lv_vdb.c **** #if LV_VDB_DOUBLE == 0 && LV_COLOR_SCREEN_TRANSP
 151:..\lvgl\lv_core/lv_vdb.c ****     memset(vdb_buf, 0x00, LV_VDB_SIZE_IN_BYTES);
 152:..\lvgl\lv_core/lv_vdb.c **** #endif
 153:..\lvgl\lv_core/lv_vdb.c **** }
 154:..\lvgl\lv_core/lv_vdb.c **** 
 155:..\lvgl\lv_core/lv_vdb.c **** /**
 156:..\lvgl\lv_core/lv_vdb.c ****  * Get currently active VDB, where the drawing happens. Used with `LV_VDB_DOUBLE  1`
 157:..\lvgl\lv_core/lv_vdb.c ****  * @return pointer to the active VDB. If `LV_VDB_DOUBLE  0` give the single VDB
 158:..\lvgl\lv_core/lv_vdb.c ****  */
 159:..\lvgl\lv_core/lv_vdb.c **** lv_vdb_t * lv_vdb_get_active(void)
 160:..\lvgl\lv_core/lv_vdb.c **** {
 174              		.loc 1 160 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178              		@ link register save eliminated.
 161:..\lvgl\lv_core/lv_vdb.c **** #if LV_VDB_DOUBLE == 0
 162:..\lvgl\lv_core/lv_vdb.c ****     return &vdb;
 163:..\lvgl\lv_core/lv_vdb.c **** #else
 164:..\lvgl\lv_core/lv_vdb.c ****     return &vdb[vdb_active];
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccr6hg59.s 			page 7


 165:..\lvgl\lv_core/lv_vdb.c **** #endif
 166:..\lvgl\lv_core/lv_vdb.c **** }
 179              		.loc 1 166 0
 180 0000 0048     		ldr	r0, .L18
 181 0002 7047     		bx	lr
 182              	.L19:
 183              		.align	2
 184              	.L18:
 185 0004 00000000 		.word	.LANCHOR1
 186              		.cfi_endproc
 187              	.LFE16:
 188              		.size	lv_vdb_get_active, .-lv_vdb_get_active
 189              		.section	.text.lv_vdb_get_inactive,"ax",%progbits
 190              		.align	2
 191              		.global	lv_vdb_get_inactive
 192              		.thumb
 193              		.thumb_func
 194              		.type	lv_vdb_get_inactive, %function
 195              	lv_vdb_get_inactive:
 196              	.LFB17:
 167:..\lvgl\lv_core/lv_vdb.c **** 
 168:..\lvgl\lv_core/lv_vdb.c **** /**
 169:..\lvgl\lv_core/lv_vdb.c ****  * Get currently inactive VDB, which is being displayed or being flushed. Used with `LV_VDB_DOUBLE 
 170:..\lvgl\lv_core/lv_vdb.c ****  * @return pointer to the inactive VDB. If `LV_VDB_DOUBLE  0` give the single VDB
 171:..\lvgl\lv_core/lv_vdb.c ****  */
 172:..\lvgl\lv_core/lv_vdb.c **** lv_vdb_t * lv_vdb_get_inactive(void)
 173:..\lvgl\lv_core/lv_vdb.c **** {
 197              		.loc 1 173 0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201              		@ link register save eliminated.
 174:..\lvgl\lv_core/lv_vdb.c **** #if LV_VDB_DOUBLE == 0
 175:..\lvgl\lv_core/lv_vdb.c ****     return &vdb;
 176:..\lvgl\lv_core/lv_vdb.c **** #else
 177:..\lvgl\lv_core/lv_vdb.c ****     return &vdb[(vdb_active + 1) & 0x1];
 178:..\lvgl\lv_core/lv_vdb.c **** #endif
 179:..\lvgl\lv_core/lv_vdb.c **** }
 202              		.loc 1 179 0
 203 0000 0048     		ldr	r0, .L21
 204 0002 7047     		bx	lr
 205              	.L22:
 206              		.align	2
 207              	.L21:
 208 0004 00000000 		.word	.LANCHOR1
 209              		.cfi_endproc
 210              	.LFE17:
 211              		.size	lv_vdb_get_inactive, .-lv_vdb_get_inactive
 212              		.section	.text.lv_vdb_is_flushing,"ax",%progbits
 213              		.align	2
 214              		.global	lv_vdb_is_flushing
 215              		.thumb
 216              		.thumb_func
 217              		.type	lv_vdb_is_flushing, %function
 218              	lv_vdb_is_flushing:
 219              	.LFB18:
 180:..\lvgl\lv_core/lv_vdb.c **** 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccr6hg59.s 			page 8


 181:..\lvgl\lv_core/lv_vdb.c **** /**
 182:..\lvgl\lv_core/lv_vdb.c ****  * Whether the flushing is in progress or not
 183:..\lvgl\lv_core/lv_vdb.c ****  * @return true: flushing is in progress; false: flushing ready
 184:..\lvgl\lv_core/lv_vdb.c ****  */
 185:..\lvgl\lv_core/lv_vdb.c **** bool lv_vdb_is_flushing(void)
 186:..\lvgl\lv_core/lv_vdb.c **** {
 220              		.loc 1 186 0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224              		@ link register save eliminated.
 187:..\lvgl\lv_core/lv_vdb.c ****     return vdb_flushing;
 225              		.loc 1 187 0
 226 0000 014B     		ldr	r3, .L24
 227 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 188:..\lvgl\lv_core/lv_vdb.c **** }
 228              		.loc 1 188 0
 229 0004 7047     		bx	lr
 230              	.L25:
 231 0006 00BF     		.align	2
 232              	.L24:
 233 0008 00000000 		.word	.LANCHOR0
 234              		.cfi_endproc
 235              	.LFE18:
 236              		.size	lv_vdb_is_flushing, .-lv_vdb_is_flushing
 237              		.data
 238              		.align	2
 239              		.set	.LANCHOR1,. + 0
 240              		.type	vdb, %object
 241              		.size	vdb, 12
 242              	vdb:
 243 0000 00000000 		.space	8
 243      00000000 
 244 0008 04000000 		.word	vdb_buf
 245              		.section	.rodata.str1.4,"aMS",%progbits,1
 246              		.align	2
 247              	.LC0:
 248 0000 496E7661 		.ascii	"Invalid VDB pointer\000"
 248      6C696420 
 248      56444220 
 248      706F696E 
 248      74657200 
 249              	.LC1:
 250 0014 2E2E5C6C 		.ascii	"..\\lvgl\\lv_core\\lv_vdb.c\000"
 250      76676C5C 
 250      6C765F63 
 250      6F72655C 
 250      6C765F76 
 251              		.bss
 252              		.align	2
 253              		.set	.LANCHOR0,. + 0
 254              		.type	vdb_flushing, %object
 255              		.size	vdb_flushing, 1
 256              	vdb_flushing:
 257 0000 00       		.space	1
 258 0001 000000   		.space	3
 259              		.type	vdb_buf, %object
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccr6hg59.s 			page 9


 260              		.size	vdb_buf, 819
 261              	vdb_buf:
 262 0004 00000000 		.space	819
 262      00000000 
 262      00000000 
 262      00000000 
 262      00000000 
 263              		.text
 264              	.Letext0:
 265              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 266              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 267              		.file 4 "..\\lvgl\\lv_core\\../lv_misc/lv_color.h"
 268              		.file 5 "..\\lvgl\\lv_core\\../lv_misc/lv_area.h"
 269              		.file 6 "..\\lvgl\\lv_core\\lv_vdb.h"
 270              		.file 7 "..\\lvgl\\lv_core\\../lv_hal/../lv_core/../lv_misc/lv_log.h"
 271              		.file 8 "..\\lvgl\\lv_core\\../lv_hal/lv_hal_disp.h"
 272              		.section	.debug_info,"",%progbits
 273              	.Ldebug_info0:
 274 0000 EA020000 		.4byte	0x2ea
 275 0004 0400     		.2byte	0x4
 276 0006 00000000 		.4byte	.Ldebug_abbrev0
 277 000a 04       		.byte	0x4
 278 000b 01       		.uleb128 0x1
 279 000c 84000000 		.4byte	.LASF39
 280 0010 0C       		.byte	0xc
 281 0011 37020000 		.4byte	.LASF40
 282 0015 3D010000 		.4byte	.LASF41
 283 0019 00000000 		.4byte	.Ldebug_ranges0+0
 284 001d 00000000 		.4byte	0
 285 0021 00000000 		.4byte	.Ldebug_line0
 286 0025 02       		.uleb128 0x2
 287 0026 01       		.byte	0x1
 288 0027 06       		.byte	0x6
 289 0028 6A000000 		.4byte	.LASF0
 290 002c 03       		.uleb128 0x3
 291 002d 18000000 		.4byte	.LASF2
 292 0031 02       		.byte	0x2
 293 0032 1D       		.byte	0x1d
 294 0033 37000000 		.4byte	0x37
 295 0037 02       		.uleb128 0x2
 296 0038 01       		.byte	0x1
 297 0039 08       		.byte	0x8
 298 003a 76000000 		.4byte	.LASF1
 299 003e 03       		.uleb128 0x3
 300 003f 22000000 		.4byte	.LASF3
 301 0043 02       		.byte	0x2
 302 0044 29       		.byte	0x29
 303 0045 49000000 		.4byte	0x49
 304 0049 02       		.uleb128 0x2
 305 004a 02       		.byte	0x2
 306 004b 05       		.byte	0x5
 307 004c 5E020000 		.4byte	.LASF4
 308 0050 02       		.uleb128 0x2
 309 0051 02       		.byte	0x2
 310 0052 07       		.byte	0x7
 311 0053 24010000 		.4byte	.LASF5
 312 0057 02       		.uleb128 0x2
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccr6hg59.s 			page 10


 313 0058 04       		.byte	0x4
 314 0059 05       		.byte	0x5
 315 005a 68020000 		.4byte	.LASF6
 316 005e 02       		.uleb128 0x2
 317 005f 04       		.byte	0x4
 318 0060 07       		.byte	0x7
 319 0061 12010000 		.4byte	.LASF7
 320 0065 02       		.uleb128 0x2
 321 0066 08       		.byte	0x8
 322 0067 05       		.byte	0x5
 323 0068 00000000 		.4byte	.LASF8
 324 006c 02       		.uleb128 0x2
 325 006d 08       		.byte	0x8
 326 006e 07       		.byte	0x7
 327 006f 03020000 		.4byte	.LASF9
 328 0073 04       		.uleb128 0x4
 329 0074 04       		.byte	0x4
 330 0075 05       		.byte	0x5
 331 0076 696E7400 		.ascii	"int\000"
 332 007a 02       		.uleb128 0x2
 333 007b 04       		.byte	0x4
 334 007c 07       		.byte	0x7
 335 007d D9010000 		.4byte	.LASF10
 336 0081 03       		.uleb128 0x3
 337 0082 1A020000 		.4byte	.LASF11
 338 0086 03       		.byte	0x3
 339 0087 18       		.byte	0x18
 340 0088 2C000000 		.4byte	0x2c
 341 008c 03       		.uleb128 0x3
 342 008d 27020000 		.4byte	.LASF12
 343 0091 03       		.byte	0x3
 344 0092 20       		.byte	0x20
 345 0093 3E000000 		.4byte	0x3e
 346 0097 05       		.uleb128 0x5
 347 0098 01       		.byte	0x1
 348 0099 04       		.byte	0x4
 349 009a 5F       		.byte	0x5f
 350 009b D8000000 		.4byte	0xd8
 351 009f 06       		.uleb128 0x6
 352 00a0 C5010000 		.4byte	.LASF13
 353 00a4 04       		.byte	0x4
 354 00a5 61       		.byte	0x61
 355 00a6 81000000 		.4byte	0x81
 356 00aa 01       		.byte	0x1
 357 00ab 01       		.byte	0x1
 358 00ac 07       		.byte	0x7
 359 00ad 06       		.uleb128 0x6
 360 00ae 37010000 		.4byte	.LASF14
 361 00b2 04       		.byte	0x4
 362 00b3 62       		.byte	0x62
 363 00b4 81000000 		.4byte	0x81
 364 00b8 01       		.byte	0x1
 365 00b9 01       		.byte	0x1
 366 00ba 07       		.byte	0x7
 367 00bb 07       		.uleb128 0x7
 368 00bc 72656400 		.ascii	"red\000"
 369 00c0 04       		.byte	0x4
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccr6hg59.s 			page 11


 370 00c1 63       		.byte	0x63
 371 00c2 81000000 		.4byte	0x81
 372 00c6 01       		.byte	0x1
 373 00c7 01       		.byte	0x1
 374 00c8 07       		.byte	0x7
 375 00c9 06       		.uleb128 0x6
 376 00ca B7010000 		.4byte	.LASF15
 377 00ce 04       		.byte	0x4
 378 00cf 64       		.byte	0x64
 379 00d0 81000000 		.4byte	0x81
 380 00d4 01       		.byte	0x1
 381 00d5 01       		.byte	0x1
 382 00d6 07       		.byte	0x7
 383 00d7 00       		.byte	0
 384 00d8 03       		.uleb128 0x3
 385 00d9 94020000 		.4byte	.LASF16
 386 00dd 04       		.byte	0x4
 387 00de 65       		.byte	0x65
 388 00df 97000000 		.4byte	0x97
 389 00e3 03       		.uleb128 0x3
 390 00e4 5F000000 		.4byte	.LASF17
 391 00e8 04       		.byte	0x4
 392 00e9 92       		.byte	0x92
 393 00ea D8000000 		.4byte	0xd8
 394 00ee 02       		.uleb128 0x2
 395 00ef 08       		.byte	0x8
 396 00f0 04       		.byte	0x4
 397 00f1 7B020000 		.4byte	.LASF18
 398 00f5 02       		.uleb128 0x2
 399 00f6 04       		.byte	0x4
 400 00f7 07       		.byte	0x7
 401 00f8 55020000 		.4byte	.LASF19
 402 00fc 08       		.uleb128 0x8
 403 00fd 04       		.byte	0x4
 404 00fe 02       		.uleb128 0x2
 405 00ff 01       		.byte	0x1
 406 0100 08       		.byte	0x8
 407 0101 50020000 		.4byte	.LASF20
 408 0105 03       		.uleb128 0x3
 409 0106 54000000 		.4byte	.LASF21
 410 010a 05       		.byte	0x5
 411 010b 1E       		.byte	0x1e
 412 010c 8C000000 		.4byte	0x8c
 413 0110 09       		.uleb128 0x9
 414 0111 08       		.byte	0x8
 415 0112 05       		.byte	0x5
 416 0113 26       		.byte	0x26
 417 0114 45010000 		.4byte	0x145
 418 0118 0A       		.uleb128 0xa
 419 0119 783100   		.ascii	"x1\000"
 420 011c 05       		.byte	0x5
 421 011d 28       		.byte	0x28
 422 011e 05010000 		.4byte	0x105
 423 0122 00       		.byte	0
 424 0123 0A       		.uleb128 0xa
 425 0124 793100   		.ascii	"y1\000"
 426 0127 05       		.byte	0x5
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccr6hg59.s 			page 12


 427 0128 29       		.byte	0x29
 428 0129 05010000 		.4byte	0x105
 429 012d 02       		.byte	0x2
 430 012e 0A       		.uleb128 0xa
 431 012f 783200   		.ascii	"x2\000"
 432 0132 05       		.byte	0x5
 433 0133 2A       		.byte	0x2a
 434 0134 05010000 		.4byte	0x105
 435 0138 04       		.byte	0x4
 436 0139 0A       		.uleb128 0xa
 437 013a 793200   		.ascii	"y2\000"
 438 013d 05       		.byte	0x5
 439 013e 2B       		.byte	0x2b
 440 013f 05010000 		.4byte	0x105
 441 0143 06       		.byte	0x6
 442 0144 00       		.byte	0
 443 0145 03       		.uleb128 0x3
 444 0146 71020000 		.4byte	.LASF22
 445 014a 05       		.byte	0x5
 446 014b 2C       		.byte	0x2c
 447 014c 10010000 		.4byte	0x110
 448 0150 09       		.uleb128 0x9
 449 0151 0C       		.byte	0xc
 450 0152 06       		.byte	0x6
 451 0153 35       		.byte	0x35
 452 0154 71010000 		.4byte	0x171
 453 0158 0B       		.uleb128 0xb
 454 0159 22020000 		.4byte	.LASF23
 455 015d 06       		.byte	0x6
 456 015e 37       		.byte	0x37
 457 015f 45010000 		.4byte	0x145
 458 0163 00       		.byte	0
 459 0164 0A       		.uleb128 0xa
 460 0165 62756600 		.ascii	"buf\000"
 461 0169 06       		.byte	0x6
 462 016a 38       		.byte	0x38
 463 016b 71010000 		.4byte	0x171
 464 016f 08       		.byte	0x8
 465 0170 00       		.byte	0
 466 0171 0C       		.uleb128 0xc
 467 0172 04       		.byte	0x4
 468 0173 E3000000 		.4byte	0xe3
 469 0177 03       		.uleb128 0x3
 470 0178 BC010000 		.4byte	.LASF24
 471 017c 06       		.byte	0x6
 472 017d 39       		.byte	0x39
 473 017e 50010000 		.4byte	0x150
 474 0182 02       		.uleb128 0x2
 475 0183 01       		.byte	0x1
 476 0184 02       		.byte	0x2
 477 0185 A0020000 		.4byte	.LASF25
 478 0189 0D       		.uleb128 0xd
 479 018a 2C000000 		.4byte	.LASF30
 480 018e 01       		.byte	0x1
 481 018f 4B       		.byte	0x4b
 482 0190 9E010000 		.4byte	0x19e
 483 0194 00000000 		.4byte	.LFB12
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccr6hg59.s 			page 13


 484 0198 18000000 		.4byte	.LFE12-.LFB12
 485 019c 01       		.uleb128 0x1
 486 019d 9C       		.byte	0x9c
 487 019e 0C       		.uleb128 0xc
 488 019f 04       		.byte	0x4
 489 01a0 77010000 		.4byte	0x177
 490 01a4 0E       		.uleb128 0xe
 491 01a5 87020000 		.4byte	.LASF26
 492 01a9 01       		.byte	0x1
 493 01aa 5C       		.byte	0x5c
 494 01ab 00000000 		.4byte	.LFB13
 495 01af 48000000 		.4byte	.LFE13-.LFB13
 496 01b3 01       		.uleb128 0x1
 497 01b4 9C       		.byte	0x9c
 498 01b5 0E020000 		.4byte	0x20e
 499 01b9 0F       		.uleb128 0xf
 500 01ba A6020000 		.4byte	.LASF34
 501 01be 01       		.byte	0x1
 502 01bf 5E       		.byte	0x5e
 503 01c0 9E010000 		.4byte	0x19e
 504 01c4 00000000 		.4byte	.LLST0
 505 01c8 10       		.uleb128 0x10
 506 01c9 08000000 		.4byte	.LVL0
 507 01cd 89010000 		.4byte	0x189
 508 01d1 11       		.uleb128 0x11
 509 01d2 16000000 		.4byte	.LVL2
 510 01d6 D7020000 		.4byte	0x2d7
 511 01da FC010000 		.4byte	0x1fc
 512 01de 12       		.uleb128 0x12
 513 01df 01       		.uleb128 0x1
 514 01e0 50       		.byte	0x50
 515 01e1 01       		.uleb128 0x1
 516 01e2 32       		.byte	0x32
 517 01e3 12       		.uleb128 0x12
 518 01e4 01       		.uleb128 0x1
 519 01e5 51       		.byte	0x51
 520 01e6 05       		.uleb128 0x5
 521 01e7 03       		.byte	0x3
 522 01e8 14000000 		.4byte	.LC1
 523 01ec 12       		.uleb128 0x12
 524 01ed 01       		.uleb128 0x1
 525 01ee 52       		.byte	0x52
 526 01ef 02       		.uleb128 0x2
 527 01f0 08       		.byte	0x8
 528 01f1 60       		.byte	0x60
 529 01f2 12       		.uleb128 0x12
 530 01f3 01       		.uleb128 0x1
 531 01f4 53       		.byte	0x53
 532 01f5 05       		.uleb128 0x5
 533 01f6 03       		.byte	0x3
 534 01f7 00000000 		.4byte	.LC0
 535 01fb 00       		.byte	0
 536 01fc 13       		.uleb128 0x13
 537 01fd 38000000 		.4byte	.LVL6
 538 0201 E2020000 		.4byte	0x2e2
 539 0205 12       		.uleb128 0x12
 540 0206 02       		.uleb128 0x2
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccr6hg59.s 			page 14


 541 0207 7D       		.byte	0x7d
 542 0208 00       		.sleb128 0
 543 0209 02       		.uleb128 0x2
 544 020a 74       		.byte	0x74
 545 020b 00       		.sleb128 0
 546 020c 00       		.byte	0
 547 020d 00       		.byte	0
 548 020e 0E       		.uleb128 0xe
 549 020f CA010000 		.4byte	.LASF27
 550 0213 01       		.byte	0x1
 551 0214 83       		.byte	0x83
 552 0215 00000000 		.4byte	.LFB14
 553 0219 0C000000 		.4byte	.LFE14-.LFB14
 554 021d 01       		.uleb128 0x1
 555 021e 9C       		.byte	0x9c
 556 021f 3E020000 		.4byte	0x23e
 557 0223 14       		.uleb128 0x14
 558 0224 0E000000 		.4byte	.LASF28
 559 0228 01       		.byte	0x1
 560 0229 83       		.byte	0x83
 561 022a FC000000 		.4byte	0xfc
 562 022e 01       		.uleb128 0x1
 563 022f 50       		.byte	0x50
 564 0230 14       		.uleb128 0x14
 565 0231 13000000 		.4byte	.LASF29
 566 0235 01       		.byte	0x1
 567 0236 83       		.byte	0x83
 568 0237 FC000000 		.4byte	0xfc
 569 023b 01       		.uleb128 0x1
 570 023c 51       		.byte	0x51
 571 023d 00       		.byte	0
 572 023e 15       		.uleb128 0x15
 573 023f E6010000 		.4byte	.LASF42
 574 0243 01       		.byte	0x1
 575 0244 91       		.byte	0x91
 576 0245 00000000 		.4byte	.LFB15
 577 0249 0C000000 		.4byte	.LFE15-.LFB15
 578 024d 01       		.uleb128 0x1
 579 024e 9C       		.byte	0x9c
 580 024f 0D       		.uleb128 0xd
 581 0250 37000000 		.4byte	.LASF31
 582 0254 01       		.byte	0x1
 583 0255 9F       		.byte	0x9f
 584 0256 9E010000 		.4byte	0x19e
 585 025a 00000000 		.4byte	.LFB16
 586 025e 08000000 		.4byte	.LFE16-.LFB16
 587 0262 01       		.uleb128 0x1
 588 0263 9C       		.byte	0x9c
 589 0264 0D       		.uleb128 0xd
 590 0265 83010000 		.4byte	.LASF32
 591 0269 01       		.byte	0x1
 592 026a AC       		.byte	0xac
 593 026b 9E010000 		.4byte	0x19e
 594 026f 00000000 		.4byte	.LFB17
 595 0273 08000000 		.4byte	.LFE17-.LFB17
 596 0277 01       		.uleb128 0x1
 597 0278 9C       		.byte	0x9c
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccr6hg59.s 			page 15


 598 0279 0D       		.uleb128 0xd
 599 027a 97010000 		.4byte	.LASF33
 600 027e 01       		.byte	0x1
 601 027f B9       		.byte	0xb9
 602 0280 82010000 		.4byte	0x182
 603 0284 00000000 		.4byte	.LFB18
 604 0288 0C000000 		.4byte	.LFE18-.LFB18
 605 028c 01       		.uleb128 0x1
 606 028d 9C       		.byte	0x9c
 607 028e 16       		.uleb128 0x16
 608 028f 81000000 		.4byte	0x81
 609 0293 9F020000 		.4byte	0x29f
 610 0297 17       		.uleb128 0x17
 611 0298 F5000000 		.4byte	0xf5
 612 029c 3203     		.2byte	0x332
 613 029e 00       		.byte	0
 614 029f 18       		.uleb128 0x18
 615 02a0 2F020000 		.4byte	.LASF35
 616 02a4 01       		.byte	0x1
 617 02a5 27       		.byte	0x27
 618 02a6 8E020000 		.4byte	0x28e
 619 02aa 05       		.uleb128 0x5
 620 02ab 03       		.byte	0x3
 621 02ac 04000000 		.4byte	vdb_buf
 622 02b0 19       		.uleb128 0x19
 623 02b1 76646200 		.ascii	"vdb\000"
 624 02b5 01       		.byte	0x1
 625 02b6 28       		.byte	0x28
 626 02b7 77010000 		.4byte	0x177
 627 02bb 05       		.uleb128 0x5
 628 02bc 03       		.byte	0x3
 629 02bd 00000000 		.4byte	vdb
 630 02c1 18       		.uleb128 0x18
 631 02c2 AA010000 		.4byte	.LASF36
 632 02c6 01       		.byte	0x1
 633 02c7 3D       		.byte	0x3d
 634 02c8 D2020000 		.4byte	0x2d2
 635 02cc 05       		.uleb128 0x5
 636 02cd 03       		.byte	0x3
 637 02ce 00000000 		.4byte	vdb_flushing
 638 02d2 1A       		.uleb128 0x1a
 639 02d3 82010000 		.4byte	0x182
 640 02d7 1B       		.uleb128 0x1b
 641 02d8 49000000 		.4byte	.LASF37
 642 02dc 49000000 		.4byte	.LASF37
 643 02e0 07       		.byte	0x7
 644 02e1 3D       		.byte	0x3d
 645 02e2 1B       		.uleb128 0x1b
 646 02e3 F5010000 		.4byte	.LASF38
 647 02e7 F5010000 		.4byte	.LASF38
 648 02eb 08       		.byte	0x8
 649 02ec 70       		.byte	0x70
 650 02ed 00       		.byte	0
 651              		.section	.debug_abbrev,"",%progbits
 652              	.Ldebug_abbrev0:
 653 0000 01       		.uleb128 0x1
 654 0001 11       		.uleb128 0x11
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccr6hg59.s 			page 16


 655 0002 01       		.byte	0x1
 656 0003 25       		.uleb128 0x25
 657 0004 0E       		.uleb128 0xe
 658 0005 13       		.uleb128 0x13
 659 0006 0B       		.uleb128 0xb
 660 0007 03       		.uleb128 0x3
 661 0008 0E       		.uleb128 0xe
 662 0009 1B       		.uleb128 0x1b
 663 000a 0E       		.uleb128 0xe
 664 000b 55       		.uleb128 0x55
 665 000c 17       		.uleb128 0x17
 666 000d 11       		.uleb128 0x11
 667 000e 01       		.uleb128 0x1
 668 000f 10       		.uleb128 0x10
 669 0010 17       		.uleb128 0x17
 670 0011 00       		.byte	0
 671 0012 00       		.byte	0
 672 0013 02       		.uleb128 0x2
 673 0014 24       		.uleb128 0x24
 674 0015 00       		.byte	0
 675 0016 0B       		.uleb128 0xb
 676 0017 0B       		.uleb128 0xb
 677 0018 3E       		.uleb128 0x3e
 678 0019 0B       		.uleb128 0xb
 679 001a 03       		.uleb128 0x3
 680 001b 0E       		.uleb128 0xe
 681 001c 00       		.byte	0
 682 001d 00       		.byte	0
 683 001e 03       		.uleb128 0x3
 684 001f 16       		.uleb128 0x16
 685 0020 00       		.byte	0
 686 0021 03       		.uleb128 0x3
 687 0022 0E       		.uleb128 0xe
 688 0023 3A       		.uleb128 0x3a
 689 0024 0B       		.uleb128 0xb
 690 0025 3B       		.uleb128 0x3b
 691 0026 0B       		.uleb128 0xb
 692 0027 49       		.uleb128 0x49
 693 0028 13       		.uleb128 0x13
 694 0029 00       		.byte	0
 695 002a 00       		.byte	0
 696 002b 04       		.uleb128 0x4
 697 002c 24       		.uleb128 0x24
 698 002d 00       		.byte	0
 699 002e 0B       		.uleb128 0xb
 700 002f 0B       		.uleb128 0xb
 701 0030 3E       		.uleb128 0x3e
 702 0031 0B       		.uleb128 0xb
 703 0032 03       		.uleb128 0x3
 704 0033 08       		.uleb128 0x8
 705 0034 00       		.byte	0
 706 0035 00       		.byte	0
 707 0036 05       		.uleb128 0x5
 708 0037 17       		.uleb128 0x17
 709 0038 01       		.byte	0x1
 710 0039 0B       		.uleb128 0xb
 711 003a 0B       		.uleb128 0xb
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccr6hg59.s 			page 17


 712 003b 3A       		.uleb128 0x3a
 713 003c 0B       		.uleb128 0xb
 714 003d 3B       		.uleb128 0x3b
 715 003e 0B       		.uleb128 0xb
 716 003f 01       		.uleb128 0x1
 717 0040 13       		.uleb128 0x13
 718 0041 00       		.byte	0
 719 0042 00       		.byte	0
 720 0043 06       		.uleb128 0x6
 721 0044 0D       		.uleb128 0xd
 722 0045 00       		.byte	0
 723 0046 03       		.uleb128 0x3
 724 0047 0E       		.uleb128 0xe
 725 0048 3A       		.uleb128 0x3a
 726 0049 0B       		.uleb128 0xb
 727 004a 3B       		.uleb128 0x3b
 728 004b 0B       		.uleb128 0xb
 729 004c 49       		.uleb128 0x49
 730 004d 13       		.uleb128 0x13
 731 004e 0B       		.uleb128 0xb
 732 004f 0B       		.uleb128 0xb
 733 0050 0D       		.uleb128 0xd
 734 0051 0B       		.uleb128 0xb
 735 0052 0C       		.uleb128 0xc
 736 0053 0B       		.uleb128 0xb
 737 0054 00       		.byte	0
 738 0055 00       		.byte	0
 739 0056 07       		.uleb128 0x7
 740 0057 0D       		.uleb128 0xd
 741 0058 00       		.byte	0
 742 0059 03       		.uleb128 0x3
 743 005a 08       		.uleb128 0x8
 744 005b 3A       		.uleb128 0x3a
 745 005c 0B       		.uleb128 0xb
 746 005d 3B       		.uleb128 0x3b
 747 005e 0B       		.uleb128 0xb
 748 005f 49       		.uleb128 0x49
 749 0060 13       		.uleb128 0x13
 750 0061 0B       		.uleb128 0xb
 751 0062 0B       		.uleb128 0xb
 752 0063 0D       		.uleb128 0xd
 753 0064 0B       		.uleb128 0xb
 754 0065 0C       		.uleb128 0xc
 755 0066 0B       		.uleb128 0xb
 756 0067 00       		.byte	0
 757 0068 00       		.byte	0
 758 0069 08       		.uleb128 0x8
 759 006a 0F       		.uleb128 0xf
 760 006b 00       		.byte	0
 761 006c 0B       		.uleb128 0xb
 762 006d 0B       		.uleb128 0xb
 763 006e 00       		.byte	0
 764 006f 00       		.byte	0
 765 0070 09       		.uleb128 0x9
 766 0071 13       		.uleb128 0x13
 767 0072 01       		.byte	0x1
 768 0073 0B       		.uleb128 0xb
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccr6hg59.s 			page 18


 769 0074 0B       		.uleb128 0xb
 770 0075 3A       		.uleb128 0x3a
 771 0076 0B       		.uleb128 0xb
 772 0077 3B       		.uleb128 0x3b
 773 0078 0B       		.uleb128 0xb
 774 0079 01       		.uleb128 0x1
 775 007a 13       		.uleb128 0x13
 776 007b 00       		.byte	0
 777 007c 00       		.byte	0
 778 007d 0A       		.uleb128 0xa
 779 007e 0D       		.uleb128 0xd
 780 007f 00       		.byte	0
 781 0080 03       		.uleb128 0x3
 782 0081 08       		.uleb128 0x8
 783 0082 3A       		.uleb128 0x3a
 784 0083 0B       		.uleb128 0xb
 785 0084 3B       		.uleb128 0x3b
 786 0085 0B       		.uleb128 0xb
 787 0086 49       		.uleb128 0x49
 788 0087 13       		.uleb128 0x13
 789 0088 38       		.uleb128 0x38
 790 0089 0B       		.uleb128 0xb
 791 008a 00       		.byte	0
 792 008b 00       		.byte	0
 793 008c 0B       		.uleb128 0xb
 794 008d 0D       		.uleb128 0xd
 795 008e 00       		.byte	0
 796 008f 03       		.uleb128 0x3
 797 0090 0E       		.uleb128 0xe
 798 0091 3A       		.uleb128 0x3a
 799 0092 0B       		.uleb128 0xb
 800 0093 3B       		.uleb128 0x3b
 801 0094 0B       		.uleb128 0xb
 802 0095 49       		.uleb128 0x49
 803 0096 13       		.uleb128 0x13
 804 0097 38       		.uleb128 0x38
 805 0098 0B       		.uleb128 0xb
 806 0099 00       		.byte	0
 807 009a 00       		.byte	0
 808 009b 0C       		.uleb128 0xc
 809 009c 0F       		.uleb128 0xf
 810 009d 00       		.byte	0
 811 009e 0B       		.uleb128 0xb
 812 009f 0B       		.uleb128 0xb
 813 00a0 49       		.uleb128 0x49
 814 00a1 13       		.uleb128 0x13
 815 00a2 00       		.byte	0
 816 00a3 00       		.byte	0
 817 00a4 0D       		.uleb128 0xd
 818 00a5 2E       		.uleb128 0x2e
 819 00a6 00       		.byte	0
 820 00a7 3F       		.uleb128 0x3f
 821 00a8 19       		.uleb128 0x19
 822 00a9 03       		.uleb128 0x3
 823 00aa 0E       		.uleb128 0xe
 824 00ab 3A       		.uleb128 0x3a
 825 00ac 0B       		.uleb128 0xb
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccr6hg59.s 			page 19


 826 00ad 3B       		.uleb128 0x3b
 827 00ae 0B       		.uleb128 0xb
 828 00af 27       		.uleb128 0x27
 829 00b0 19       		.uleb128 0x19
 830 00b1 49       		.uleb128 0x49
 831 00b2 13       		.uleb128 0x13
 832 00b3 11       		.uleb128 0x11
 833 00b4 01       		.uleb128 0x1
 834 00b5 12       		.uleb128 0x12
 835 00b6 06       		.uleb128 0x6
 836 00b7 40       		.uleb128 0x40
 837 00b8 18       		.uleb128 0x18
 838 00b9 9742     		.uleb128 0x2117
 839 00bb 19       		.uleb128 0x19
 840 00bc 00       		.byte	0
 841 00bd 00       		.byte	0
 842 00be 0E       		.uleb128 0xe
 843 00bf 2E       		.uleb128 0x2e
 844 00c0 01       		.byte	0x1
 845 00c1 3F       		.uleb128 0x3f
 846 00c2 19       		.uleb128 0x19
 847 00c3 03       		.uleb128 0x3
 848 00c4 0E       		.uleb128 0xe
 849 00c5 3A       		.uleb128 0x3a
 850 00c6 0B       		.uleb128 0xb
 851 00c7 3B       		.uleb128 0x3b
 852 00c8 0B       		.uleb128 0xb
 853 00c9 27       		.uleb128 0x27
 854 00ca 19       		.uleb128 0x19
 855 00cb 11       		.uleb128 0x11
 856 00cc 01       		.uleb128 0x1
 857 00cd 12       		.uleb128 0x12
 858 00ce 06       		.uleb128 0x6
 859 00cf 40       		.uleb128 0x40
 860 00d0 18       		.uleb128 0x18
 861 00d1 9742     		.uleb128 0x2117
 862 00d3 19       		.uleb128 0x19
 863 00d4 01       		.uleb128 0x1
 864 00d5 13       		.uleb128 0x13
 865 00d6 00       		.byte	0
 866 00d7 00       		.byte	0
 867 00d8 0F       		.uleb128 0xf
 868 00d9 34       		.uleb128 0x34
 869 00da 00       		.byte	0
 870 00db 03       		.uleb128 0x3
 871 00dc 0E       		.uleb128 0xe
 872 00dd 3A       		.uleb128 0x3a
 873 00de 0B       		.uleb128 0xb
 874 00df 3B       		.uleb128 0x3b
 875 00e0 0B       		.uleb128 0xb
 876 00e1 49       		.uleb128 0x49
 877 00e2 13       		.uleb128 0x13
 878 00e3 02       		.uleb128 0x2
 879 00e4 17       		.uleb128 0x17
 880 00e5 00       		.byte	0
 881 00e6 00       		.byte	0
 882 00e7 10       		.uleb128 0x10
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccr6hg59.s 			page 20


 883 00e8 898201   		.uleb128 0x4109
 884 00eb 00       		.byte	0
 885 00ec 11       		.uleb128 0x11
 886 00ed 01       		.uleb128 0x1
 887 00ee 31       		.uleb128 0x31
 888 00ef 13       		.uleb128 0x13
 889 00f0 00       		.byte	0
 890 00f1 00       		.byte	0
 891 00f2 11       		.uleb128 0x11
 892 00f3 898201   		.uleb128 0x4109
 893 00f6 01       		.byte	0x1
 894 00f7 11       		.uleb128 0x11
 895 00f8 01       		.uleb128 0x1
 896 00f9 31       		.uleb128 0x31
 897 00fa 13       		.uleb128 0x13
 898 00fb 01       		.uleb128 0x1
 899 00fc 13       		.uleb128 0x13
 900 00fd 00       		.byte	0
 901 00fe 00       		.byte	0
 902 00ff 12       		.uleb128 0x12
 903 0100 8A8201   		.uleb128 0x410a
 904 0103 00       		.byte	0
 905 0104 02       		.uleb128 0x2
 906 0105 18       		.uleb128 0x18
 907 0106 9142     		.uleb128 0x2111
 908 0108 18       		.uleb128 0x18
 909 0109 00       		.byte	0
 910 010a 00       		.byte	0
 911 010b 13       		.uleb128 0x13
 912 010c 898201   		.uleb128 0x4109
 913 010f 01       		.byte	0x1
 914 0110 11       		.uleb128 0x11
 915 0111 01       		.uleb128 0x1
 916 0112 31       		.uleb128 0x31
 917 0113 13       		.uleb128 0x13
 918 0114 00       		.byte	0
 919 0115 00       		.byte	0
 920 0116 14       		.uleb128 0x14
 921 0117 05       		.uleb128 0x5
 922 0118 00       		.byte	0
 923 0119 03       		.uleb128 0x3
 924 011a 0E       		.uleb128 0xe
 925 011b 3A       		.uleb128 0x3a
 926 011c 0B       		.uleb128 0xb
 927 011d 3B       		.uleb128 0x3b
 928 011e 0B       		.uleb128 0xb
 929 011f 49       		.uleb128 0x49
 930 0120 13       		.uleb128 0x13
 931 0121 02       		.uleb128 0x2
 932 0122 18       		.uleb128 0x18
 933 0123 00       		.byte	0
 934 0124 00       		.byte	0
 935 0125 15       		.uleb128 0x15
 936 0126 2E       		.uleb128 0x2e
 937 0127 00       		.byte	0
 938 0128 3F       		.uleb128 0x3f
 939 0129 19       		.uleb128 0x19
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccr6hg59.s 			page 21


 940 012a 03       		.uleb128 0x3
 941 012b 0E       		.uleb128 0xe
 942 012c 3A       		.uleb128 0x3a
 943 012d 0B       		.uleb128 0xb
 944 012e 3B       		.uleb128 0x3b
 945 012f 0B       		.uleb128 0xb
 946 0130 27       		.uleb128 0x27
 947 0131 19       		.uleb128 0x19
 948 0132 11       		.uleb128 0x11
 949 0133 01       		.uleb128 0x1
 950 0134 12       		.uleb128 0x12
 951 0135 06       		.uleb128 0x6
 952 0136 40       		.uleb128 0x40
 953 0137 18       		.uleb128 0x18
 954 0138 9742     		.uleb128 0x2117
 955 013a 19       		.uleb128 0x19
 956 013b 00       		.byte	0
 957 013c 00       		.byte	0
 958 013d 16       		.uleb128 0x16
 959 013e 01       		.uleb128 0x1
 960 013f 01       		.byte	0x1
 961 0140 49       		.uleb128 0x49
 962 0141 13       		.uleb128 0x13
 963 0142 01       		.uleb128 0x1
 964 0143 13       		.uleb128 0x13
 965 0144 00       		.byte	0
 966 0145 00       		.byte	0
 967 0146 17       		.uleb128 0x17
 968 0147 21       		.uleb128 0x21
 969 0148 00       		.byte	0
 970 0149 49       		.uleb128 0x49
 971 014a 13       		.uleb128 0x13
 972 014b 2F       		.uleb128 0x2f
 973 014c 05       		.uleb128 0x5
 974 014d 00       		.byte	0
 975 014e 00       		.byte	0
 976 014f 18       		.uleb128 0x18
 977 0150 34       		.uleb128 0x34
 978 0151 00       		.byte	0
 979 0152 03       		.uleb128 0x3
 980 0153 0E       		.uleb128 0xe
 981 0154 3A       		.uleb128 0x3a
 982 0155 0B       		.uleb128 0xb
 983 0156 3B       		.uleb128 0x3b
 984 0157 0B       		.uleb128 0xb
 985 0158 49       		.uleb128 0x49
 986 0159 13       		.uleb128 0x13
 987 015a 02       		.uleb128 0x2
 988 015b 18       		.uleb128 0x18
 989 015c 00       		.byte	0
 990 015d 00       		.byte	0
 991 015e 19       		.uleb128 0x19
 992 015f 34       		.uleb128 0x34
 993 0160 00       		.byte	0
 994 0161 03       		.uleb128 0x3
 995 0162 08       		.uleb128 0x8
 996 0163 3A       		.uleb128 0x3a
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccr6hg59.s 			page 22


 997 0164 0B       		.uleb128 0xb
 998 0165 3B       		.uleb128 0x3b
 999 0166 0B       		.uleb128 0xb
 1000 0167 49       		.uleb128 0x49
 1001 0168 13       		.uleb128 0x13
 1002 0169 02       		.uleb128 0x2
 1003 016a 18       		.uleb128 0x18
 1004 016b 00       		.byte	0
 1005 016c 00       		.byte	0
 1006 016d 1A       		.uleb128 0x1a
 1007 016e 35       		.uleb128 0x35
 1008 016f 00       		.byte	0
 1009 0170 49       		.uleb128 0x49
 1010 0171 13       		.uleb128 0x13
 1011 0172 00       		.byte	0
 1012 0173 00       		.byte	0
 1013 0174 1B       		.uleb128 0x1b
 1014 0175 2E       		.uleb128 0x2e
 1015 0176 00       		.byte	0
 1016 0177 3F       		.uleb128 0x3f
 1017 0178 19       		.uleb128 0x19
 1018 0179 3C       		.uleb128 0x3c
 1019 017a 19       		.uleb128 0x19
 1020 017b 6E       		.uleb128 0x6e
 1021 017c 0E       		.uleb128 0xe
 1022 017d 03       		.uleb128 0x3
 1023 017e 0E       		.uleb128 0xe
 1024 017f 3A       		.uleb128 0x3a
 1025 0180 0B       		.uleb128 0xb
 1026 0181 3B       		.uleb128 0x3b
 1027 0182 0B       		.uleb128 0xb
 1028 0183 00       		.byte	0
 1029 0184 00       		.byte	0
 1030 0185 00       		.byte	0
 1031              		.section	.debug_loc,"",%progbits
 1032              	.Ldebug_loc0:
 1033              	.LLST0:
 1034 0000 08000000 		.4byte	.LVL0
 1035 0004 12000000 		.4byte	.LVL1
 1036 0008 0100     		.2byte	0x1
 1037 000a 50       		.byte	0x50
 1038 000b 18000000 		.4byte	.LVL3
 1039 000f 24000000 		.4byte	.LVL4
 1040 0013 0100     		.2byte	0x1
 1041 0015 50       		.byte	0x50
 1042 0016 24000000 		.4byte	.LVL4
 1043 001a 32000000 		.4byte	.LVL5
 1044 001e 0100     		.2byte	0x1
 1045 0020 54       		.byte	0x54
 1046 0021 00000000 		.4byte	0
 1047 0025 00000000 		.4byte	0
 1048              		.section	.debug_aranges,"",%progbits
 1049 0000 4C000000 		.4byte	0x4c
 1050 0004 0200     		.2byte	0x2
 1051 0006 00000000 		.4byte	.Ldebug_info0
 1052 000a 04       		.byte	0x4
 1053 000b 00       		.byte	0
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccr6hg59.s 			page 23


 1054 000c 0000     		.2byte	0
 1055 000e 0000     		.2byte	0
 1056 0010 00000000 		.4byte	.LFB12
 1057 0014 18000000 		.4byte	.LFE12-.LFB12
 1058 0018 00000000 		.4byte	.LFB13
 1059 001c 48000000 		.4byte	.LFE13-.LFB13
 1060 0020 00000000 		.4byte	.LFB14
 1061 0024 0C000000 		.4byte	.LFE14-.LFB14
 1062 0028 00000000 		.4byte	.LFB15
 1063 002c 0C000000 		.4byte	.LFE15-.LFB15
 1064 0030 00000000 		.4byte	.LFB16
 1065 0034 08000000 		.4byte	.LFE16-.LFB16
 1066 0038 00000000 		.4byte	.LFB17
 1067 003c 08000000 		.4byte	.LFE17-.LFB17
 1068 0040 00000000 		.4byte	.LFB18
 1069 0044 0C000000 		.4byte	.LFE18-.LFB18
 1070 0048 00000000 		.4byte	0
 1071 004c 00000000 		.4byte	0
 1072              		.section	.debug_ranges,"",%progbits
 1073              	.Ldebug_ranges0:
 1074 0000 00000000 		.4byte	.LFB12
 1075 0004 18000000 		.4byte	.LFE12
 1076 0008 00000000 		.4byte	.LFB13
 1077 000c 48000000 		.4byte	.LFE13
 1078 0010 00000000 		.4byte	.LFB14
 1079 0014 0C000000 		.4byte	.LFE14
 1080 0018 00000000 		.4byte	.LFB15
 1081 001c 0C000000 		.4byte	.LFE15
 1082 0020 00000000 		.4byte	.LFB16
 1083 0024 08000000 		.4byte	.LFE16
 1084 0028 00000000 		.4byte	.LFB17
 1085 002c 08000000 		.4byte	.LFE17
 1086 0030 00000000 		.4byte	.LFB18
 1087 0034 0C000000 		.4byte	.LFE18
 1088 0038 00000000 		.4byte	0
 1089 003c 00000000 		.4byte	0
 1090              		.section	.debug_line,"",%progbits
 1091              	.Ldebug_line0:
 1092 0000 60020000 		.section	.debug_str,"MS",%progbits,1
 1092      0200D501 
 1092      00000201 
 1092      FB0E0D00 
 1092      01010101 
 1093              	.LASF8:
 1094 0000 6C6F6E67 		.ascii	"long long int\000"
 1094      206C6F6E 
 1094      6720696E 
 1094      7400
 1095              	.LASF28:
 1096 000e 62756631 		.ascii	"buf1\000"
 1096      00
 1097              	.LASF29:
 1098 0013 62756632 		.ascii	"buf2\000"
 1098      00
 1099              	.LASF2:
 1100 0018 5F5F7569 		.ascii	"__uint8_t\000"
 1100      6E74385F 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccr6hg59.s 			page 24


 1100      7400
 1101              	.LASF3:
 1102 0022 5F5F696E 		.ascii	"__int16_t\000"
 1102      7431365F 
 1102      7400
 1103              	.LASF30:
 1104 002c 6C765F76 		.ascii	"lv_vdb_get\000"
 1104      64625F67 
 1104      657400
 1105              	.LASF31:
 1106 0037 6C765F76 		.ascii	"lv_vdb_get_active\000"
 1106      64625F67 
 1106      65745F61 
 1106      63746976 
 1106      6500
 1107              	.LASF37:
 1108 0049 6C765F6C 		.ascii	"lv_log_add\000"
 1108      6F675F61 
 1108      646400
 1109              	.LASF21:
 1110 0054 6C765F63 		.ascii	"lv_coord_t\000"
 1110      6F6F7264 
 1110      5F7400
 1111              	.LASF17:
 1112 005f 6C765F63 		.ascii	"lv_color_t\000"
 1112      6F6C6F72 
 1112      5F7400
 1113              	.LASF0:
 1114 006a 7369676E 		.ascii	"signed char\000"
 1114      65642063 
 1114      68617200 
 1115              	.LASF1:
 1116 0076 756E7369 		.ascii	"unsigned char\000"
 1116      676E6564 
 1116      20636861 
 1116      7200
 1117              	.LASF39:
 1118 0084 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1118      43313120 
 1118      352E342E 
 1118      31203230 
 1118      31363036 
 1119 00b7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1119      20726576 
 1119      6973696F 
 1119      6E203233 
 1119      37373135 
 1120 00ea 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1120      66756E63 
 1120      74696F6E 
 1120      2D736563 
 1120      74696F6E 
 1121              	.LASF7:
 1122 0112 6C6F6E67 		.ascii	"long unsigned int\000"
 1122      20756E73 
 1122      69676E65 
 1122      6420696E 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccr6hg59.s 			page 25


 1122      7400
 1123              	.LASF5:
 1124 0124 73686F72 		.ascii	"short unsigned int\000"
 1124      7420756E 
 1124      7369676E 
 1124      65642069 
 1124      6E7400
 1125              	.LASF14:
 1126 0137 67726565 		.ascii	"green\000"
 1126      6E00
 1127              	.LASF41:
 1128 013d 433A5C55 		.ascii	"C:\\Users\\d3bug\\Documents\\Creator\\lvgl_ssd1306\\"
 1128      73657273 
 1128      5C643362 
 1128      75675C44 
 1128      6F63756D 
 1129 016b 68656C6C 		.ascii	"hello_world_label.cydsn\000"
 1129      6F5F776F 
 1129      726C645F 
 1129      6C616265 
 1129      6C2E6379 
 1130              	.LASF32:
 1131 0183 6C765F76 		.ascii	"lv_vdb_get_inactive\000"
 1131      64625F67 
 1131      65745F69 
 1131      6E616374 
 1131      69766500 
 1132              	.LASF33:
 1133 0197 6C765F76 		.ascii	"lv_vdb_is_flushing\000"
 1133      64625F69 
 1133      735F666C 
 1133      75736869 
 1133      6E6700
 1134              	.LASF36:
 1135 01aa 7664625F 		.ascii	"vdb_flushing\000"
 1135      666C7573 
 1135      68696E67 
 1135      00
 1136              	.LASF15:
 1137 01b7 66756C6C 		.ascii	"full\000"
 1137      00
 1138              	.LASF24:
 1139 01bc 6C765F76 		.ascii	"lv_vdb_t\000"
 1139      64625F74 
 1139      00
 1140              	.LASF13:
 1141 01c5 626C7565 		.ascii	"blue\000"
 1141      00
 1142              	.LASF27:
 1143 01ca 6C765F76 		.ascii	"lv_vdb_set_adr\000"
 1143      64625F73 
 1143      65745F61 
 1143      647200
 1144              	.LASF10:
 1145 01d9 756E7369 		.ascii	"unsigned int\000"
 1145      676E6564 
 1145      20696E74 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccr6hg59.s 			page 26


 1145      00
 1146              	.LASF42:
 1147 01e6 6C765F66 		.ascii	"lv_flush_ready\000"
 1147      6C757368 
 1147      5F726561 
 1147      647900
 1148              	.LASF38:
 1149 01f5 6C765F64 		.ascii	"lv_disp_flush\000"
 1149      6973705F 
 1149      666C7573 
 1149      6800
 1150              	.LASF9:
 1151 0203 6C6F6E67 		.ascii	"long long unsigned int\000"
 1151      206C6F6E 
 1151      6720756E 
 1151      7369676E 
 1151      65642069 
 1152              	.LASF11:
 1153 021a 75696E74 		.ascii	"uint8_t\000"
 1153      385F7400 
 1154              	.LASF23:
 1155 0222 61726561 		.ascii	"area\000"
 1155      00
 1156              	.LASF12:
 1157 0227 696E7431 		.ascii	"int16_t\000"
 1157      365F7400 
 1158              	.LASF35:
 1159 022f 7664625F 		.ascii	"vdb_buf\000"
 1159      62756600 
 1160              	.LASF40:
 1161 0237 2E2E5C6C 		.ascii	"..\\lvgl\\lv_core\\lv_vdb.c\000"
 1161      76676C5C 
 1161      6C765F63 
 1161      6F72655C 
 1161      6C765F76 
 1162              	.LASF20:
 1163 0250 63686172 		.ascii	"char\000"
 1163      00
 1164              	.LASF19:
 1165 0255 73697A65 		.ascii	"sizetype\000"
 1165      74797065 
 1165      00
 1166              	.LASF4:
 1167 025e 73686F72 		.ascii	"short int\000"
 1167      7420696E 
 1167      7400
 1168              	.LASF6:
 1169 0268 6C6F6E67 		.ascii	"long int\000"
 1169      20696E74 
 1169      00
 1170              	.LASF22:
 1171 0271 6C765F61 		.ascii	"lv_area_t\000"
 1171      7265615F 
 1171      7400
 1172              	.LASF18:
 1173 027b 6C6F6E67 		.ascii	"long double\000"
 1173      20646F75 
ARM GAS  C:\Users\d3bug\AppData\Local\Temp\ccr6hg59.s 			page 27


 1173      626C6500 
 1174              	.LASF26:
 1175 0287 6C765F76 		.ascii	"lv_vdb_flush\000"
 1175      64625F66 
 1175      6C757368 
 1175      00
 1176              	.LASF16:
 1177 0294 6C765F63 		.ascii	"lv_color1_t\000"
 1177      6F6C6F72 
 1177      315F7400 
 1178              	.LASF25:
 1179 02a0 5F426F6F 		.ascii	"_Bool\000"
 1179      6C00
 1180              	.LASF34:
 1181 02a6 7664625F 		.ascii	"vdb_act\000"
 1181      61637400 
 1182              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
